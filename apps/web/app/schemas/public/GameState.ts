// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { type EventNetworkName, type EventContractAddress, type EventTransactionHash, type EventEventIndex } from './Event';
import { type ColumnType, type Selectable } from 'kysely';

/** Represents the view public.game_state */
export default interface GameStateTable {
  networkName: ColumnType<EventNetworkName, never, never>;

  contractAddress: ColumnType<EventContractAddress, never, never>;

  blockHash: ColumnType<string | null, never, never>;

  blockIndex: ColumnType<number | null, never, never>;

  transactionHash: ColumnType<EventTransactionHash, never, never>;

  transactionIndex: ColumnType<number, never, never>;

  eventIndex: ColumnType<EventEventIndex, never, never>;

  eventName: ColumnType<string, never, never>;

  eventData: ColumnType<unknown, never, never>;

  createdAt: ColumnType<Date, never, never>;

  updatedAt: ColumnType<Date, never, never>;

  transferFrom: ColumnType<string | null, never, never>;

  transferTo: ColumnType<string | null, never, never>;

  transferAmount: ColumnType<string | null, never, never>;

  transactionOwner: ColumnType<string | null, never, never>;

  transactionStatus: ColumnType<string | null, never, never>;

  gameId: ColumnType<string | null, never, never>;

  gameGeneration: ColumnType<string | null, never, never>;

  gameState: ColumnType<string | null, never, never>;

  revivedCellIndex: ColumnType<string | null, never, never>;

  gameOver: ColumnType<boolean | null, never, never>;

  revivedCellIndexes: ColumnType<string[], never, never>;

  revivedCellOwners: ColumnType<string[], never, never>;
}

export type GameState = Selectable<GameStateTable>;
