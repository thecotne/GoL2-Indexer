version: "3"

volumes:
  gol2-db:
  pgadmin-data:

services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    env_file:
      - .env
      - .env.docker
    ports:
      - 5432:5432
    volumes:
      - gol2-db:/var/lib/postgresql/data

  migrations:
    image: gol2-migrations
    build:
      context: .
      dockerfile: Dockerfile
      target: migrations
    depends_on:
      db:
        condition: service_started
        required: true
    env_file:
      - .env
      - .env.docker

  indexer:
    image: gol2-indexer
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
      target: indexer
    depends_on:
      db:
        condition: service_started
        required: true
      migrations:
        condition: service_completed_successfully
        required: true
    env_file:
      - .env
      - .env.docker

  web:
    image: gol2-web
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
      target: web
    depends_on:
      db:
        condition: service_started
        required: true
      migrations:
        condition: service_completed_successfully
        required: true
    env_file:
      - .env
      - .env.docker
    ports:
      - 3000:3000

  dozzle:
    image: amir20/dozzle:latest
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - .env
      - .env.docker
    ports:
      - 8080:8080

  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    depends_on:
      db:
        condition: service_started
        required: true
    env_file:
      - .env
      - .env.docker
    ports:
      - 5050:80
    volumes:
      - pgadmin-data:/var/lib/pgadmin
