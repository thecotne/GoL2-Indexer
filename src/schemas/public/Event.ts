// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import { type ColumnType, type Selectable, type Insertable, type Updateable } from 'kysely';

/** Identifier type for public.event */
export type EventTransactionHash = string & { __brand: 'EventTransactionHash' };

/** Identifier type for public.event */
export type EventEventIndex = number & { __brand: 'EventEventIndex' };

/** Represents the table public.event */
export default interface EventTable {
  transactionHash: ColumnType<EventTransactionHash, EventTransactionHash, EventTransactionHash>;

  eventIndex: ColumnType<EventEventIndex, EventEventIndex, EventEventIndex>;

  blockHash: ColumnType<string | null, string | null, string | null>;

  blockIndex: ColumnType<number | null, number | null, number | null>;

  transactionIndex: ColumnType<number, number, number>;

  eventName: ColumnType<string, string, string>;

  eventData: ColumnType<unknown, unknown, unknown>;

  createdAt: ColumnType<Date, Date | string | undefined, Date | string>;

  updatedAt: ColumnType<Date, Date | string | undefined, Date | string>;
}

export type Event = Selectable<EventTable>;

export type NewEvent = Insertable<EventTable>;

export type EventUpdate = Updateable<EventTable>;
